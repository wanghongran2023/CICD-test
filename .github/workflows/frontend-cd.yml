name: CD

on:
  push:
    branches: ["main"]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  Linting:
    name: Linting Job
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Install Dependency
        working-directory: frontend
        run: npm ci

      - name: Linting Job
        working-directory: frontend
        run:  npm run lint
        continue-on-error: false

  Test:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      
      - name: Set Up Nvm
        working-directory: frontend
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash

      - name: Use Correct NodeJS Version
        working-directory: frontend
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install
          nvm use

      - name: Install Dependency
        working-directory: frontend
        run: npm ci

      - name: Run Test
        working-directory: frontend
        run: npm test
        continue-on-error: false

  Build:
    name: Build Job
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Test
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image and Push
        working-directory: frontend
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=frontend:${GIT_SHA} .
          REPOSITORY_URI=$(aws ecr describe-repositories --repository-names frontend --region us-east-1 --query "repositories[0].repositoryUri" --output text)
          docker tag frontend:${GIT_SHA} $REPOSITORY_URI:${GIT_SHA}
          docker push $REPOSITORY_URI:${GIT_SHA}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  Deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy
        working-directory: frontend/k8s
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          kustomize edit set image frontend=399608680309.dkr.ecr.us-east-1.amazonaws.com/frontend:$GIT_SHA
          kustomize build | kubectl apply -f -
        

